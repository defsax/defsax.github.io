<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on Perry Defayette</title>
    <link>https://perrydefayette.dev/tags/web/</link>
    <description>Recent content in web on Perry Defayette</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Sep 2020 14:35:57 -0400</lastBuildDate>
    
	<atom:link href="https://perrydefayette.dev/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Game: PONG</title>
      <link>https://perrydefayette.dev/projects/pong/</link>
      <pubDate>Tue, 15 Sep 2020 14:35:57 -0400</pubDate>
      
      <guid>https://perrydefayette.dev/projects/pong/</guid>
      <description>  Pong     manual:
ball:
 left:
 right:
      </description>
    </item>
    
    <item>
      <title>Project: Hexclock</title>
      <link>https://perrydefayette.dev/projects/hexclock/</link>
      <pubDate>Fri, 24 Jul 2020 13:19:45 -0400</pubDate>
      
      <guid>https://perrydefayette.dev/projects/hexclock/</guid>
      <description>  Hex-Clock   dec hex      </description>
    </item>
    
    <item>
      <title>Hexclock and Hextime</title>
      <link>https://perrydefayette.dev/posts/hexclock/</link>
      <pubDate>Tue, 14 Jul 2020 16:25:51 -0400</pubDate>
      
      <guid>https://perrydefayette.dev/posts/hexclock/</guid>
      <description>There&amp;rsquo;s a little executable in the quasi console driven &amp;ldquo;hacking&amp;rdquo; game Hacknet. If you run hexclock.exe in the game, a small widget appears and changes your HUD&amp;rsquo;s colour according to the in-game time.
So what did it take to make a web version of the hexclock? I quickly realized that most/all of the single-page &amp;ldquo;hexclock&amp;rdquo; apps that I found were variations of setting the colour value of the background using hexadecimal.</description>
    </item>
    
    <item>
      <title>Creating a Web Worker in Codepen</title>
      <link>https://perrydefayette.dev/posts/codepenwebworker/</link>
      <pubDate>Tue, 25 Feb 2020 15:33:36 -0500</pubDate>
      
      <guid>https://perrydefayette.dev/posts/codepenwebworker/</guid>
      <description>In trying to find a way to integrate javascript projects into this blog without loading special seperate css and js files into my markdown, I came across some built-in hugo shortcode for codepen. After some tinkering I was able to embed codepen projects right into my markdown using just the slug
(as in: {{&amp;lt;codePen xxxxxxx&amp;gt;}}).
However I then ran into the issue of trying to load any generic worker.js file to get a web worker running.</description>
    </item>
    
    <item>
      <title>Letterscrambler</title>
      <link>https://perrydefayette.dev/projects/letterscrambler/</link>
      <pubDate>Tue, 11 Feb 2020 15:40:38 -0500</pubDate>
      
      <guid>https://perrydefayette.dev/projects/letterscrambler/</guid>
      <description>&amp;hellip;For lack of a better title.
This application takes some user input, checks letter validity against a pre-written array of characters (so that the worker doesn&amp;rsquo;t run forever), then summons a web worker to randomly cycle the letters until the user word/phrase is found. You can control the worker delay using the slider input.
On github.
See the Pen Letter Scrambler by Perry (@defsax) on CodePen.  The user enters their word or phrase into the text box, then presses go.</description>
    </item>
    
  </channel>
</rss>